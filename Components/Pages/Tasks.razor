@page "/Tasks"
@using TMS.Data
@using TMS.Service
@inject TaskDataService taskDataService
@attribute [StreamRendering]
@inject NavigationManager NavigationManager

<PageTitle>Tasks</PageTitle>
<span class="flex justify-between p-2">
    <h1 class="text-3xl font-semibold text-purple-900">Tasks</h1>
    <NavLink class="focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-3 py-1.5 mb-1 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900" href="AddNewTask">Create Task</NavLink>
</span>

@if (taskData == null)
{
    <p><em>Loading..............................</em></p>
}
else
{     
        <div class="relative overflow-x-auto p-8">
            <table class="w-full text-sm text-left rtl:text-right text-gray-500">
                <thead class="text-xs text-white bg-purple-900 border-3 border-purple-200">
                    <tr>
                        <th scope="col" class="px-6 py-3">
                                Title 
                        </th>
                        <th scope="col" class="px-6 py-3">
                                Description
                        </th>
                        <th scope="col" class="px-6 py-3">
                                Due Date
                        </th>
                        <th scope="col" class="px-6 py-3">
                                Status
                        </th>
                        <th scope="col" class="px-6 py-3">
                                Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                     @foreach (var task in taskData)
                    {
                            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                                @task.Title
                                </th>
                                <td class="px-6 py-4">
                                @task.Description
                                </td>
                                <td class="px-6 py-4">
                                @task.DueDate
                                </td>
                                <td class="px-6 py-4">
                                @task.Status
                                </td>
                                <td class="px-6 py-4">
                                    <button @onclick="editTask" class="focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-3 py-1.5 mb-1 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900">Edit</button>
                                </td>
                            </tr>
                    }
                </tbody>
            </table>
        </div>

}

@code {
    [Parameter]
    public int Id { get; set; }

    List<TaskData> taskData = new List<TaskData>();

    protected override async Task OnInitializedAsync()
    {
        taskData = await Task.Run(() => taskDataService.GetAllTaskDatas());
    }

    void editTask()
    {
        NavigationManager.NavigateTo($"/AddNewTask/{Id}");
    }
}
