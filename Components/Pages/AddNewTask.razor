@page "/AddNewTask"
@using TMS.Data
@using TMS.Service
@inject TaskDataService taskDataService
@inject NavigationManager NavigationManager

<h1 class="text-3xl font-semibold text-purple-900">Add New Tasks</h1>
<EditForm Model="taskData" OnSubmit="CreateNewTaskData" FormName="createtaskform" class="p-8">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="bg-purple-900 p-8 rounded shadow-md w-96">
        <!-- Task Title -->
        <div class="mb-4 form-group">
            <label class="block text-sm font-medium text-white">Title</label>
            <InputText class="form-control mt-1 p-2 w-full border rounded-md" @bind-Value="taskData.Title">@taskData.Title</InputText>
            <ValidationMessage For="() => taskData.Title"></ValidationMessage>
        </div>

        <!-- Task Description -->
        <div class="mb-4 form-group">
            <label class="block text-sm font-medium text-white">Description</label>
            <InputTextArea rows="3" class="form-control mt-1 p-2 w-full border rounded-md" @bind-Value="taskData.Description">@taskData.Description</InputTextArea>
            <ValidationMessage For="() => taskData.Description"></ValidationMessage>
        </div>

        <!-- Task DueDate -->
        <div class="mb-4 form-group">
            <label class="block text-sm font-medium text-white">Due Date</label>
            <InputDate class="form-control mt-1 p-2 w-full border rounded-md" @bind-Value="taskData.DueDate">@taskData.DueDate</InputDate>
            <ValidationMessage For="() => taskData.DueDate"></ValidationMessage>
        </div>

        <!-- Task Status -->
        <div class="mb-4 form-group">
            <label class="block text-sm font-medium text-white">Status</label>
                <InputSelect class="form-control mt-1 p-2 w-full border rounded-md" @bind-Value="taskData.Status">
                    <option value="">To Do</option>
                    <option value="">In Progress</option>
                    <option value="">Completed</option>
                </InputSelect>
            <ValidationMessage For="() => taskData.Status"></ValidationMessage>
        </div>

        <div class="flex justify-end space-x-2">
            <button type="submit" class="px-4 py-2 bg-white font-bold text-purple-900 rounded hover:bg-purple-600 focus:outline-none focus:ring focus:border-blue-300" @onclick="@CreateNewTaskData">Create</button>
        </div>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    TaskData taskData { get; set; } = new TaskData();

    protected async Task CreateNewTaskData()
    {
        await taskDataService.AddNewTaskData(taskData);
        NavigationManager.NavigateTo("Tasks");
    }
 }
